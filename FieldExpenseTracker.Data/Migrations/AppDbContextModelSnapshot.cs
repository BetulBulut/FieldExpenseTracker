// <auto-generated />
using System;
using FieldExpenseTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FieldExpenseTracker.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfJoining = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "Management",
                            Email = "first.admin@example.com",
                            EmployeeNumber = "EMP001",
                            FirstName = "First",
                            InsertedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertedUser = "system",
                            IsActive = true,
                            IsManager = true,
                            LastName = "Admin",
                            Position = "Manager",
                            Salary = 75000m,
                            UpdatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 2,
                            DateOfJoining = new DateTime(2018, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "IT",
                            Email = "jane.smith@example.com",
                            EmployeeNumber = "EMP002",
                            FirstName = "Jane",
                            InsertedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertedUser = "system",
                            IsActive = true,
                            IsManager = false,
                            LastName = "Smith",
                            Position = "Employee",
                            Salary = 90000m,
                            UpdatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "system"
                        });
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAddresses", (string)null);
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeeIBAN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeIBANs", (string)null);
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeePhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePhones", (string)null);
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExpenseNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiptImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponseDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ResponsedByUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ResponsedByUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("Expenses", (string)null);
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Expenses related to travel and transportation.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 545, DateTimeKind.Local).AddTicks(4273),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Travel",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8218),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Expenses related to meals and dining.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8234),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Food",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8235),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Expenses for office-related supplies and equipment.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8236),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Office Supplies",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8237),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Expenses for entertainment and team-building activities.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8238),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Entertainment",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8239),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Expenses for utilities such as electricity and water.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8240),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Utilities",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8241),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Other expenses that do not fit into the above categories.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8242),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Miscellaneous",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8242),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Expenses related to training and development.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8244),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Training",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8244),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Expenses related to marketing and advertising.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8245),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Marketing",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8246),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Expenses for entertaining clients or customers.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8247),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Client Entertainment",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8248),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Expenses related to health and safety measures.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8249),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Health & Safety",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8250),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Expenses for repairs and maintenance of equipment.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8251),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Repairs & Maintenance",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8252),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Expenses related to insurance premiums.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8253),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Insurance",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8253),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Expenses for shipping and delivery services.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8255),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Shipping & Delivery",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8255),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Expenses for subscriptions to services or publications.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8257),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Subscriptions",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8257),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Expenses for professional services such as consulting.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8258),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Professional Fees",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8259),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Expenses related to research and development activities.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8260),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Research & Development",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8261),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Expenses related to legal services and consultations.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8262),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Legal",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8263),
                            UpdatedUser = "system"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Expenses for telecommunications services.",
                            InsertedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8264),
                            InsertedUser = "system",
                            IsActive = true,
                            Name = "Telecommunications",
                            UpdatedDate = new DateTime(2025, 5, 5, 10, 35, 29, 546, DateTimeKind.Local).AddTicks(8264),
                            UpdatedUser = "system"
                        });
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            EmployeeId = 1,
                            FirstName = "System",
                            InsertedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertedUser = "system",
                            IsActive = true,
                            LastName = "Administrator",
                            OpenDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "76c6f58ea9461f1ba60e9b85c0ef5848",
                            Role = 1,
                            Secret = "bc5b9c39e2771571a6eaf9cd2a56508cd5130bf076d414aa42111136f770cb62",
                            UpdatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "system",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user1@example.com",
                            EmployeeId = 2,
                            FirstName = "System",
                            InsertedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertedUser = "system",
                            IsActive = true,
                            LastName = "Administrator",
                            OpenDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "791782c17b595f2a44490c5430370eb5",
                            Role = 2,
                            Secret = "9c0cabb913d2a6a6451f4ffbdb900bd68426b5fef1e19f859d6d1bce35c768f9",
                            UpdatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "system",
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeeAddress", b =>
                {
                    b.HasOne("FieldExpenseTracker.Core.Models.Employee", "Employee")
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeeIBAN", b =>
                {
                    b.HasOne("FieldExpenseTracker.Core.Models.Employee", "Employee")
                        .WithMany("IBANs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.EmployeePhone", b =>
                {
                    b.HasOne("FieldExpenseTracker.Core.Models.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.Expense", b =>
                {
                    b.HasOne("FieldExpenseTracker.Core.Models.Employee", "Employee")
                        .WithMany("Expenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldExpenseTracker.Core.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.User", b =>
                {
                    b.HasOne("FieldExpenseTracker.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Expenses");

                    b.Navigation("IBANs");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("FieldExpenseTracker.Core.Models.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
